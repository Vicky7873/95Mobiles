stages:
  bike_data_ingestion:
    cmd: python -m src.bike.pipelines.bike_data_ingestion
    deps:
      - src/bike/pipelines/bike_data_ingestion.py
      - config/bike_config.yaml
    outs:
      - data/bike/data_ingestion/used_bikes.csv

  bike_data_feature_engeenering:
    cmd: python -m src.bike.pipelines.bike_feature_eng
    deps:
      - src/bike/pipelines/bike_feature_eng.py
      - config/bike_config.yaml
    outs:
      - data/bike/feature_engeenering/clean_bike.csv
  
  bike_data_split:
    cmd: python -m src.bike.pipelines.bike_data_splitpipe
    deps:
      - src/bike/pipelines/bike_data_splitpipe.py
      - config/bike_config.yaml
    params:
        - params/bike_params.yaml:  # Explicitly reference the correct params file
          - split.test_size
          - split.random_state
    outs:
      - data/bike/data_split/X_train.csv
      - data/bike/data_split/X_test.csv
      - data/bike/data_split/y_train.csv
      - data/bike/data_split/y_test.csv

  bike_hyper_tune:
    cmd: python -m src.bike.pipelines.bike_tunning_pipeline
    deps: 
      - src/bike/pipelines/bike_tunning_pipeline.py
      - config/bike_config.yaml
    outs:
      - data/bike/bike_tune/tunned_model.pkl

  
  bike_model_eval:
    cmd: python -m src.bike.pipelines.bike_tunning_pipeline
    deps:
      - src/bike/pipelines/bike_tunning_pipeline.py
      - config/bike_config.yaml
    outs:
      - data/bike/model_eval/score.json

  
  car_data_ingestion:
    cmd: python -m src.car.pipelines.st_01_car_data_ingestion
    deps:
      - src/car/pipelines/st_01_car_data_ingestion.py
      - config/car_config.yaml
    outs:
      - data/car/data_ingestion/car.csv

  car_feature_eng:
    cmd: python -m src.car.pipelines.st_02_carFe_pipeline
    deps:
      - src/car/pipelines/st_02_carFe_pipeline.py
      - config/car_config.yaml
    outs:
      - data/car/car_fe/car_clean.csv

  car_data_split:
    cmd: python -m src.car.pipelines.st_03_car_data_splitpipeline
    deps:
      - src/car/pipelines/st_03_car_data_splitpipeline.py
      - config/car_config.yaml
    params:
      - params/car_params.yaml:
        - split.test_size
        - split.random_state
    outs:
      - data/car/data_split/X_train.csv
      - data/car/data_split/X_test.csv
      - data/car/data_split/y_train.csv
      - data/car/data_split/y_test.csv


  car_model_training:
    cmd:
      - python -m src.car.pipelines.st_04_car_Model_training
      - cp data/car/Model_training/best_model.pkl models/car_best_model.pkl
    deps: 
      - src/car/pipelines/st_04_car_Model_training.py
      - config/car_config.yaml
    params: 
      - params/car_params.yaml:
        - grid.fit_intercept
        - grid.n_estimators
        - grid.criterion
        - grid.bootstrap
        - grid.oob_score
        - grid.splitter
    outs:
     - data/car/Model_training/best_model.pkl
    #  - models/car_best_model.pkl


  car_model_eval:
    cmd: python -m src.car.pipelines.st_05_model_eval_pipeline
    deps:
      - src/car/pipelines/st_05_model_eval_pipeline.py
      - config/car_config.yaml
    outs:
      - data/car/model_eval/car_score.json
  



